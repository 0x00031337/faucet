"""
Django settings for faucet project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import environ

env = environ.Env(
    DEBUG=(bool, False),
    DATABASE_URL=(str, "sqlite://"),
    CACHE_URL=(str, "locmemcache://"),
    SECRET_KEY=(str, ""),
    RATELIMIT_ENABLE=(bool, False),
    FACTOR_BALANCE=(int, 10),
    MAXIMUM_PAYOUT=(int, 1),
    PROTOCOL=(str, "http://"),
    WALLET_HOST=(str, "localhost"),
    WALLET_PORT=(int, 38083),
    ONCE_EVERY_N_MINUTE=(int, 5),
    MONERO_ENDPOINT=(str, "/"),
    DEFAULT_MIXIN=(str, "10"),
    DAEMON_HOST=(str, "localhost"),
    DAEMON_PORT=(int, 38081),
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG")

MAXIMUM_PAYOUT = env("MAXIMUM_PAYOUT")

DEFAULT_MIXIN = env("DEFAULT_MIXIN")
MONERO_ENDPOINT = env("MONERO_ENDPOINT")
if not MONERO_ENDPOINT:
    MONERO_ENDPOINT = "/"
FACTOR_BALANCE = env("FACTOR_BALANCE")
PROTOCOL = env("PROTOCOL")
WALLET_HOST = env("WALLET_HOST")
WALLET_PORT = env("WALLET_PORT")
DAEMON_HOST = env("DAEMON_HOST")
DAEMON_PORT = env("DAEMON_PORT")
ONCE_EVERY_N_MINUTE = env("ONCE_EVERY_N_MINUTE")

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")

# add server name to allowed hosts
ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    "transactions",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "faucet.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ]
        },
    }
]

WSGI_APPLICATION = "faucet.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {"default": env.db()}

# RATELIMIT SETTINGS
RATELIMIT_ENABLE = env("RATELIMIT_ENABLE")
RATELIMIT_USE_CACHE = "default"
ADDRESS_RATE_PER_DAY = 5

CACHES = {"default": env.cache()}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_ROOT = "/data/static/"
# Where the originals are
# injected into index.html
STATIC_URL = MONERO_ENDPOINT + "static/"

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            "datefmt": "%d/%b/%Y %H:%M:%S",
        },
        "simple": {"format": "%(levelname)s %(message)s"},
    },
    "handlers": {
        "console": {
            "level": "INFO",
            "class": "logging.StreamHandler",
            "formatter": "simple",
        }
    },
    "loggers": {
        "django.request": {
            "handlers": ["console"],
            "propagate": True,
            "level": "INFO",
        }
    },
}
